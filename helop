Initialize a new Node.js project:
bash
Copy code
mkdir bfhl-api
cd bfhl-api
npm init -y
Install necessary dependencies (Express):
bash
Copy code
npm install express
Create a file named index.js and add the following code:
javascript
Copy code
const express = require('express');
const bodyParser = require('body-parser');

const app = express();
const PORT = process.env.PORT || 3000;

app.use(bodyParser.json());

// POST /bfhl endpoint
app.post('/bfhl', (req, res) => {
  try {
    const { data } = req.body;

    // Your logic for processing the data array
    const evenNumbers = data.filter(num => num % 2 === 0);
    const oddNumbers = data.filter(num => num % 2 !== 0);
    const alphabets = data.filter(item => typeof item === 'string' && item.match(/[a-zA-Z]/)).map(item => item.toUpperCase());

    // Mock user data
    const userId = "john_doe_17091999";
    const email = "john@xyz.com";
    const rollNumber = "ABCD123";

    const response = {
      is_success: true,
      user_id: userId,
      email: email,
      roll_number: rollNumber,
      odd_numbers: oddNumbers,
      even_numbers: evenNumbers,
      alphabets: alphabets
    };

    res.json(response);
  } catch (error) {
    console.error('Error:', error);
    res.status(500).json({ is_success: false, error: 'Internal Server Error' });
  }
});

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
Now, deploy your API to Heroku:
Make sure you have the Heroku CLI installed and you're logged in (heroku login).
Initialize a git repository in your project directory if you haven't already (git init).
Create a new Heroku app (heroku create).
Commit your changes and push to Heroku (git add ., git commit -m "Initial commit", git push heroku master).
After deploying, you'll get a URL where your API is hosted.















// POST /bfhl endpoint
app.post('/bfhl', (req, res) => {
  try {
    const { data } = req.body;

    let evenNumbers = [];
    let oddNumbers = [];
    let alphabets = [];

    for (const item of data) {
      if (typeof item === 'number') {
        if (item % 2 === 0) {
          evenNumbers.push(item);
        } else {
          oddNumbers.push(item);
        }
      } else if (typeof item === 'string' && item.match(/[a-zA-Z]/)) {
        alphabets.push(item.toUpperCase());
      }
    }

    // Mock user data
    const userId = "john_doe_17091999";
    const email = "john@xyz.com";
    const rollNumber = "ABCD123";

    const response = {
      is_success: true,
      user_id: userId,
      email: email,
      roll_number: rollNumber,
      odd_numbers: oddNumbers,
      even_numbers: evenNumbers,
      alphabets: alphabets
    };

    res.json(response);
  } catch (error) {
    console.error('Error:', error);
    res.status(500).json({ is_success: false, error: 'Internal Server Error' });
  }
});
